<div class="ir-code-selector">
    @if (_isLoadingLocal)
    {
        <div class="d-flex justify-center align-center py-4">
            <MudProgressCircular Size="Size.Small" Indeterminate="true" />
            <MudText Class="ml-2">Loading available IR codes...</MudText>
        </div>
    }
    else
    {
        <MudTabs Elevation="0" ApplyEffectsToContainer="true" PanelClass="pa-6">
            <MudTabPanel Text="Local IR Codes">
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_searchBrand" 
                                     Label="Search by Brand" 
                                     Immediate="true"
                                     DebounceInterval="300"
                                     OnDebounceIntervalElapsed="SearchLocalCodes"
                                     Adornment="Adornment.Start" 
                                     AdornmentIcon="@Icons.Material.Filled.Search" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="_searchModel" 
                                     Label="Search by Model" 
                                     Immediate="true"
                                     DebounceInterval="300"
                                     OnDebounceIntervalElapsed="SearchLocalCodes"
                                     Adornment="Adornment.Start" 
                                     AdornmentIcon="@Icons.Material.Filled.Search" />
                    </MudItem>
                </MudGrid>

                @if (_localCodeSets.Any())
                {
                    <MudText Class="mt-4 mb-2">Found @_localCodeSets.Count code set(s):</MudText>
                    <div class="code-sets-list">
                        @foreach (var codeSet in _localCodeSets)
                        {
                            <MudCard Class="@GetCodeSetCardClass(codeSet)" @onclick="@(() => SelectCodeSet(codeSet))">
                                <MudCardContent>
                                    <div class="d-flex align-center justify-space-between">
                                        <div>
                                            <MudText Typo="Typo.h6">@codeSet.Brand @codeSet.Model</MudText>
                                            <MudText Typo="Typo.body2" Color="Color.Secondary">
                                                @codeSet.Codes.Count commands available
                                                @if (codeSet.IsVerified)
                                                {
                                                    <MudChip T="string" Size="Size.Small" Color="Color.Success" Class="ml-2">Verified</MudChip>
                                                }
                                            </MudText>
                                        </div>
                                        @if (_selectedCodeSet?.Id == codeSet.Id)
                                        {
                                            <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Primary" />
                                        }
                                    </div>
                                </MudCardContent>
                            </MudCard>
                        }
                    </div>
                }
                else if (!string.IsNullOrEmpty(_searchBrand) || !string.IsNullOrEmpty(_searchModel))
                {
                    <MudAlert Severity="Severity.Info" Class="mt-4">
                        No IR codes found matching your search. Try the External Database tab.
                    </MudAlert>
                }
                else
                {
                    <MudAlert Severity="Severity.Info" Class="mt-4">
                        No local IR codes available. Try searching the External Database.
                    </MudAlert>
                }
            </MudTabPanel>

            <MudTabPanel Text="External Database">
                <MudGrid>
                    <MudItem xs="12">
                        <MudAutocomplete T="string" 
                                       Label="Manufacturer" 
                                       @bind-Value="_externalManufacturer"
                                       SearchFunc="SearchManufacturers"
                                       ShowProgressIndicator="true"
                                       ProgressIndicatorColor="Color.Primary"
                                       Immediate="true"
                                       MinCharacters="0"
                                       CoerceText="false"
                                       OnAdornmentClick="LoadManufacturers"
                                       Adornment="Adornment.End"
                                       AdornmentIcon="@Icons.Material.Filled.ArrowDropDown" />
                    </MudItem>
                </MudGrid>

                @if (!string.IsNullOrEmpty(_externalManufacturer))
                {
                    <MudButton Color="Color.Primary" 
                             Variant="Variant.Filled" 
                             OnClick="SearchExternalDevices"
                             Disabled="@_isSearchingExternal"
                             StartIcon="@Icons.Material.Filled.Search"
                             Class="mt-4 mb-4">
                        Search Devices
                    </MudButton>
                }

                @if (_isSearchingExternal)
                {
                    <div class="d-flex justify-center align-center py-4">
                        <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ml-2">Searching external database...</MudText>
                    </div>
                }
                else if (_externalDevices.Any())
                {
                    <MudText Class="mb-2">Found @_externalDevices.Count device(s):</MudText>
                    <div class="external-devices-list">
                        @foreach (var device in _externalDevices)
                        {
                            <MudCard Class="mb-2 cursor-pointer hover-card" @onclick="@(() => LoadExternalCodeSet(device))">
                                <MudCardContent>
                                    <div class="d-flex align-center justify-space-between">
                                        <div>
                                            <MudText Typo="Typo.subtitle1">@device.Device</MudText>
                                            <MudText Typo="Typo.body2" Color="Color.Secondary">
                                                @device.Manufacturer - @device.DeviceType
                                            </MudText>
                                        </div>
                                        <MudButton Color="Color.Primary" 
                                                 Size="Size.Small" 
                                                 Variant="Variant.Text"
                                                 StartIcon="@Icons.Material.Filled.Download">
                                            Load
                                        </MudButton>
                                    </div>
                                </MudCardContent>
                            </MudCard>
                        }
                    </div>
                }
                else if (!string.IsNullOrEmpty(_externalManufacturer) && _hasSearchedExternal)
                {
                    <MudAlert Severity="Severity.Warning" Class="mt-4">
                        No devices found for @_externalManufacturer in the external database.
                    </MudAlert>
                }
            </MudTabPanel>

            <MudTabPanel Text="Learn from Remote">
                <MudAlert Severity="Severity.Info" Icon="@Icons.Material.Filled.Info" Class="mb-4">
                    This feature will be available in a future update. It will allow you to point your existing remote at the IR receiver and learn the commands.
                </MudAlert>
            </MudTabPanel>
        </MudTabs>

        @if (_selectedCodeSet != null)
        {
            <MudDivider Class="my-4" />
            <MudCard>
                <MudCardContent>
                    <div class="d-flex align-center justify-space-between">
                        <div>
                            <MudText Typo="Typo.h6">Selected: @_selectedCodeSet.Brand @_selectedCodeSet.Model</MudText>
                            <MudText Typo="Typo.body2" Color="Color.Secondary">
                                @_selectedCodeSet.Codes.Count commands available
                            </MudText>
                        </div>
                        <div>
                            <MudButton Color="Color.Primary" 
                                     Variant="Variant.Outlined"
                                     StartIcon="@Icons.Material.Filled.PlayArrow"
                                     OnClick="TestSelectedCodeSet"
                                     Disabled="@_isTesting">
                                @if (_isTesting)
                                {
                                    <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                                }
                                Test Power
                            </MudButton>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(_testResult))
                    {
                        <MudAlert Severity="@(_testResult.Contains("success") ? Severity.Success : Severity.Error)" 
                                Class="mt-3">
                            @_testResult
                        </MudAlert>
                    }
                </MudCardContent>
            </MudCard>
        }
    }
</div>

<style>
    .ir-code-selector {
        min-height: 400px;
    }

    .code-sets-list {
        max-height: 300px;
        overflow-y: auto;
        margin-top: 1rem;
    }

    .code-sets-list .mud-card {
        cursor: pointer;
        margin-bottom: 0.5rem;
        transition: all 0.2s ease;
    }

    .code-sets-list .mud-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .code-sets-list .mud-card.selected {
        border: 2px solid var(--mud-palette-primary);
        background-color: rgba(var(--mud-palette-primary-rgb), 0.1);
    }

    .external-devices-list {
        max-height: 300px;
        overflow-y: auto;
        margin-top: 1rem;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .hover-card {
        transition: all 0.2s ease;
    }

    .hover-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
</style>