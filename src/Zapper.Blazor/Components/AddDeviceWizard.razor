
@using Zapper.Contracts
@using Zapper.Contracts.Devices

<MudDialog @bind-Visible="IsVisible" Options="_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            @if (_currentStep == WizardStep.DeviceType)
            {
                <span>Add New Device - Select Type</span>
            }
            else if (_currentStep == WizardStep.BluetoothScan)
            {
                <span>Add New Device - Scan for @_selectedDeviceTypeName Devices</span>
            }
            else if (_currentStep == WizardStep.WebOsScan)
            {
                <span>Add New Device - Scan for @_selectedDeviceTypeName TVs</span>
            }
            else if (_currentStep == WizardStep.Configuration)
            {
                <span>Add New Device - Configure @_selectedDeviceTypeName</span>
            }
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (_currentStep == WizardStep.DeviceType)
        {
            <MudText Class="mb-4">Choose the type of device you want to add:</MudText>
            <MudGrid>
                <MudItem xs="6" sm="4">
                    <MudCard Class="@GetCardClass(ConnectionType.Bluetooth, false)" 
                             Style="cursor: pointer;" @onclick="@(() => SelectDeviceTypeAndProceed(ConnectionType.Bluetooth, "Bluetooth"))">
                        <MudCardContent Class="text-center pa-4">
                            <MudIcon Icon="@Icons.Material.Filled.Bluetooth" Size="Size.Large" Class="mb-2" />
                            <MudText Typo="Typo.h6">Bluetooth</MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                                Apple TV, Android TV, Controllers
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="6" sm="4">
                    <MudCard Class="@GetCardClass(ConnectionType.InfraredIr, false)" 
                             Style="cursor: pointer;" @onclick="@(() => SelectDeviceTypeAndProceed(ConnectionType.InfraredIr, "Infrared"))">
                        <MudCardContent Class="text-center pa-4">
                            <MudIcon Icon="@Icons.Material.Filled.Sensors" Size="Size.Large" Class="mb-2" />
                            <MudText Typo="Typo.h6">Infrared</MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                                TVs, Sound Bars, Cable Boxes
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="6" sm="4">
                    <MudCard Class="@GetCardClass(ConnectionType.NetworkWebSocket, true)" 
                             Style="cursor: pointer;" @onclick="@(() => SelectDeviceTypeAndProceed(ConnectionType.NetworkWebSocket, "Roku", true))">
                        <MudCardContent Class="text-center pa-4">
                            <MudIcon Icon="@Icons.Material.Filled.Cast" Size="Size.Large" Class="mb-2" />
                            <MudText Typo="Typo.h6">Roku</MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                                Roku Streaming Devices
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="6" sm="4">
                    <MudCard Class="@GetCardClass(ConnectionType.WebOs, false)" 
                             Style="cursor: pointer;" @onclick="@(() => SelectDeviceTypeAndProceed(ConnectionType.WebOs, "WebOS"))">
                        <MudCardContent Class="text-center pa-4">
                            <MudIcon Icon="@Icons.Material.Filled.Tv" Size="Size.Large" Class="mb-2" />
                            <MudText Typo="Typo.h6">WebOS</MudText>
                            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                                LG Smart TVs
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        }
        else if (_currentStep == WizardStep.BluetoothScan)
        {
            <MudText Class="mb-4">Scanning for available Bluetooth devices...</MudText>
            
            @if (_isScanning)
            {
                <div class="d-flex justify-center align-center" style="min-height: 200px;">
                    <div class="text-center">
                        <MudProgressCircular Size="Size.Large" Indeterminate="true" Class="mb-4" />
                        <MudText Typo="Typo.h6" Class="mb-2">Scanning for devices...</MudText>
                        <MudText Typo="Typo.body2" Class="mud-text-secondary">
                            Please make sure your devices are in pairing mode
                        </MudText>
                    </div>
                </div>
            }
            else if (!string.IsNullOrEmpty(_scanError))
            {
                <MudAlert Severity="Severity.Error" Class="mb-4">
                    @_scanError
                </MudAlert>
                <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="StartBluetoothScan" Class="mb-4">
                    Retry Scan
                </MudButton>
            }
            else if (_discoveredBluetoothDevices.Any())
            {
                <MudText Class="mb-3">Found @_discoveredBluetoothDevices.Count() device(s). Select the device you want to add:</MudText>
                <div class="mb-4">
                    @foreach (var device in _discoveredBluetoothDevices)
                    {
                        <MudButton FullWidth="true" 
                                  Color="@(_selectedBluetoothDevice == device ? Color.Primary : Color.Default)"
                                  Variant="@(_selectedBluetoothDevice == device ? Variant.Filled : Variant.Outlined)"
                                  OnClick="@(() => SelectBluetoothDevice(device))"
                                  Class="mb-2">
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Bluetooth" Class="mr-3" />
                                <div class="text-left">
                                    <MudText Typo="Typo.subtitle1">@device</MudText>
                                    <MudText Typo="Typo.body2" Class="mud-text-secondary">Bluetooth Device</MudText>
                                </div>
                            </div>
                        </MudButton>
                    }
                </div>
                <MudButton Color="Color.Secondary" Variant="Variant.Text" OnClick="StartBluetoothScan" StartIcon="@Icons.Material.Filled.Refresh" Class="mt-2">
                    Rescan
                </MudButton>
            }
            else
            {
                <MudAlert Severity="Severity.Warning" Class="mb-4">
                    No Bluetooth devices found. Make sure your devices are powered on and in pairing mode.
                </MudAlert>
                <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="StartBluetoothScan" Class="mb-4">
                    Start Scan
                </MudButton>
            }
        }
        else if (_currentStep == WizardStep.WebOsScan)
        {
            <MudText Class="mb-4">Scanning for available WebOS TVs on your network...</MudText>
            
            @if (_isWebOsScanning)
            {
                <div class="d-flex justify-center align-center" style="min-height: 200px;">
                    <div class="text-center">
                        <MudProgressCircular Size="Size.Large" Indeterminate="true" Class="mb-4" />
                        <MudText Typo="Typo.h6" Class="mb-2">Scanning for WebOS TVs...</MudText>
                        <MudText Typo="Typo.body2" Class="mud-text-secondary">
                            Please make sure your TV is powered on and connected to the network
                        </MudText>
                    </div>
                </div>
            }
            else if (!string.IsNullOrEmpty(_webOsScanError))
            {
                <MudAlert Severity="Severity.Error" Class="mb-4">
                    @_webOsScanError
                </MudAlert>
                <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="StartWebOsScan" Class="mb-4">
                    Retry Scan
                </MudButton>
            }
            else if (_discoveredWebOsDevices.Any())
            {
                <MudText Class="mb-3">Found @_discoveredWebOsDevices.Count() TV(s). Select the TV you want to add:</MudText>
                <div class="mb-4">
                    @foreach (var device in _discoveredWebOsDevices)
                    {
                        <MudButton FullWidth="true" 
                                  Color="@(_selectedWebOsDevice?.Name == device.Name ? Color.Primary : Color.Default)"
                                  Variant="@(_selectedWebOsDevice?.Name == device.Name ? Variant.Filled : Variant.Outlined)"
                                  OnClick="@(() => SelectWebOsDevice(device))"
                                  Class="mb-2">
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Tv" Class="mr-3" />
                                <div class="text-left">
                                    <MudText Typo="Typo.subtitle1">@device.Name</MudText>
                                    <MudText Typo="Typo.body2" Class="mud-text-secondary">@device.IpAddress</MudText>
                                    @if (!string.IsNullOrEmpty(device.ModelName))
                                    {
                                        <MudText Typo="Typo.caption" Class="mud-text-secondary">@device.ModelName</MudText>
                                    }
                                </div>
                            </div>
                        </MudButton>
                    }
                </div>
                <MudButton Color="Color.Secondary" Variant="Variant.Text" OnClick="StartWebOsScan" StartIcon="@Icons.Material.Filled.Refresh" Class="mt-2">
                    Rescan
                </MudButton>
            }
            else
            {
                <MudAlert Severity="Severity.Warning" Class="mb-4">
                    No WebOS TVs found on your network. Make sure your TV is powered on and connected to the same network.
                </MudAlert>
                <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="StartWebOsScan" Class="mb-4">
                    Start Scan
                </MudButton>
            }
            
            <MudDivider Class="my-4" />
            <MudText Typo="Typo.h6" Class="mb-2">Or enter IP address manually:</MudText>
            <MudTextField @bind-Value="_manualWebOsIpAddress" Label="TV IP Address" 
                         HelperText="Enter the IP address of your WebOS TV (e.g., 192.168.1.100)" 
                         Class="mb-2" />
            <MudButton Color="Color.Secondary" Variant="Variant.Outlined" OnClick="UseManualWebOsip" 
                      Disabled="@(string.IsNullOrWhiteSpace(_manualWebOsIpAddress))" Class="mb-4">
                Use This IP Address
            </MudButton>
        }
        else if (_currentStep == WizardStep.Configuration)
        {
            <MudTextField @bind-Value="_newDevice.Name" Label="Device Name" Required="true" Class="mb-4" />
            <MudTextField @bind-Value="_newDevice.Brand" Label="Brand" Class="mb-4" />
            <MudTextField @bind-Value="_newDevice.Model" Label="Model" Class="mb-4" />
            
            <MudSelect T="DeviceType" @bind-Value="_newDevice.Type" Label="Device Type" Required="true" Class="mb-4">
                <MudSelectItem Value="DeviceType.Television">Television</MudSelectItem>
                <MudSelectItem Value="DeviceType.SmartTv">Smart TV</MudSelectItem>
                <MudSelectItem Value="DeviceType.SoundBar">Sound Bar</MudSelectItem>
                <MudSelectItem Value="DeviceType.StreamingDevice">Streaming Device</MudSelectItem>
                <MudSelectItem Value="DeviceType.AppleTv">Apple TV</MudSelectItem>
                <MudSelectItem Value="DeviceType.CableBox">Cable Box</MudSelectItem>
                <MudSelectItem Value="DeviceType.GameConsole">Game Console</MudSelectItem>
                <MudSelectItem Value="DeviceType.Receiver">Receiver</MudSelectItem>
                <MudSelectItem Value="DeviceType.DvdPlayer">DVD Player</MudSelectItem>
                <MudSelectItem Value="DeviceType.BluRayPlayer">Blu-ray Player</MudSelectItem>
            </MudSelect>

            @if (_selectedConnectionType == ConnectionType.NetworkTcp || _selectedConnectionType == ConnectionType.NetworkWebSocket || _selectedConnectionType == ConnectionType.WebOs)
            {
                <MudTextField @bind-Value="_newDevice.IpAddress" Label="IP Address" Required="true" Class="mb-4" 
                              HelperText="Enter the device's IP address (e.g., 192.168.1.100)" />
            }

            @if (_selectedConnectionType == ConnectionType.InfraredIr)
            {
                <MudText Class="mb-2">IR Code Set</MudText>
                <MudSelect T="string" @bind-Value="_selectedIrCodeSet" Label="Select IR Code Set" Class="mb-4">
                    <MudSelectItem Value="@("samsung-tv")">Samsung TV</MudSelectItem>
                    <MudSelectItem Value="@("lg-tv")">LG TV</MudSelectItem>
                    <MudSelectItem Value="@("sony-tv")">Sony TV</MudSelectItem>
                    <MudSelectItem Value="@("generic-tv")">Generic TV</MudSelectItem>
                </MudSelect>
            }

            @if (_selectedConnectionType == ConnectionType.Bluetooth)
            {
                <MudAlert Severity="Severity.Info" Class="mb-4">
                    Make sure your device is in pairing mode before proceeding.
                </MudAlert>
            }
        }
    </DialogContent>
    <DialogActions>
        @if (_currentStep == WizardStep.DeviceType)
        {
            <MudButton OnClick="CancelWizard">Cancel</MudButton>
        }
        else if (_currentStep == WizardStep.BluetoothScan)
        {
            <MudButton OnClick="PreviousStep">Back</MudButton>
            <MudButton OnClick="CancelWizard">Cancel</MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="NextStep" Disabled="@(string.IsNullOrEmpty(_selectedBluetoothDevice))">
                Next
            </MudButton>
        }
        else if (_currentStep == WizardStep.WebOsScan)
        {
            <MudButton OnClick="PreviousStep">Back</MudButton>
            <MudButton OnClick="CancelWizard">Cancel</MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="NextStep" Disabled="@(_selectedWebOsDevice == null && string.IsNullOrWhiteSpace(_manualWebOsIpAddress))">
                Next
            </MudButton>
        }
        else if (_currentStep == WizardStep.Configuration)
        {
            <MudButton OnClick="PreviousStep">Back</MudButton>
            <MudButton OnClick="CancelWizard">Cancel</MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="FinishWizard" Disabled="@(string.IsNullOrWhiteSpace(_newDevice.Name))">
                Add Device
            </MudButton>
        }
    </DialogActions>
</MudDialog>

<style>
    .device-type-card {
        transition: all 0.2s ease;
        border: 2px solid transparent;
    }

    .device-type-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .device-type-card.selected {
        border-color: var(--mud-palette-primary);
        background-color: rgba(var(--mud-palette-primary-rgb), 0.1);
    }
</style>


