@page "/activities"

<PageTitle>Activities - Zapper</PageTitle>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <MudAlert Severity="Severity.Error" Class="mb-4">@_errorMessage</MudAlert>
}

@if (_isLoading)
{
    <div class="d-flex justify-center align-center" style="min-height: 200px;">
        <div class="text-center">
            <MudProgressCircular Size="Size.Large" Indeterminate="true" Class="mb-4" />
            <MudText>Loading activities...</MudText>
        </div>
    </div>
}
else
{
    @if (_activities.Any())
    {
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Label="Create Activity" Class="mb-4" OnClick="@(() => _showAddDialog = true)" />
    }

    <MudGrid>
        @foreach (var activity in _activities)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard>
                    <MudCardContent>
                        <div class="d-flex align-center mb-2">
                            <MudIcon Icon="@GetActivityIcon(activity.Name)" Class="mr-2" />
                            <MudText Typo="Typo.h6">@activity.Name</MudText>
                        </div>
                        <MudText Class="mb-2">@activity.Description</MudText>
                        <MudText Class="mb-1" Typo="Typo.caption">Devices: @GetDeviceCount(activity)</MudText>
                        <MudText Class="mb-1" Typo="Typo.caption">Steps: @GetStepCount(activity)</MudText>
                        <MudChip T="string" Color="@(activity.IsEnabled ? Color.Success : Color.Default)" Size="Size.Small">
                            @(activity.IsEnabled ? "Enabled" : "Disabled")
                        </MudChip>
                        <MudText Class="mt-2" Typo="Typo.caption">Last used: @activity.LastUsed.ToString("MM/dd/yyyy HH:mm")</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="@(() => RunActivity(activity))" StartIcon="@Icons.Material.Filled.PlayArrow" Disabled="@(!activity.IsEnabled)">
                            Run
                        </MudButton>
                        <MudButton Color="Color.Secondary" Variant="Variant.Text" OnClick="@(() => EditActivity(activity))">
                            Edit
                        </MudButton>
                        <MudButton Color="Color.Error" Variant="Variant.Text" OnClick="@(() => DeleteActivity(activity))">
                            Delete
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>

    @if (!_activities.Any())
    {
        <MudPaper Class="pa-8 text-center">
            <MudIcon Icon="@Icons.Material.Filled.PlaylistPlay" Style="font-size: 3rem;" Class="mb-4 mud-text-secondary" />
            <MudText Typo="Typo.h5" Class="mb-2">No activities configured</MudText>
            <MudText Class="mb-4">Create your first activity to automate device control</MudText>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" OnClick="@(() => _showAddDialog = true)">
                Create Activity
            </MudButton>
        </MudPaper>
    }
}

<MudDialog @bind-Visible="_showAddDialog" Options="_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">Create New Activity</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="_newActivity.Name" Label="Activity Name" Required="true" Class="mb-4" />
        <MudTextField @bind-Value="_newActivity.Description" Label="Description" Lines="2" Class="mb-4" />
        <MudSelect T="string" @bind-Value="_newActivity.Type" Label="Activity Type" Required="true" Class="mb-4">
            <MudSelectItem Value="@("Entertainment")">Entertainment</MudSelectItem>
            <MudSelectItem Value="@("Gaming")">Gaming</MudSelectItem>
            <MudSelectItem Value="@("Music")">Music</MudSelectItem>
            <MudSelectItem Value="@("Movie")">Movie</MudSelectItem>
            <MudSelectItem Value="@("Sports")">Sports</MudSelectItem>
            <MudSelectItem Value="@("Custom")">Custom</MudSelectItem>
        </MudSelect>
        
        <MudText Typo="Typo.h6" Class="mb-2">Activity Steps</MudText>
        <MudText Class="mb-4" Typo="Typo.caption">Define the sequence of commands to execute</MudText>
        
        @for (int i = 0; i < _newActivity.Steps.Count; i++)
        {
            var index = i;
            <MudCard Class="mb-2">
                <MudCardContent Class="pa-3">
                    <div class="d-flex align-center">
                        <MudText Class="mr-3">@(index + 1).</MudText>
                        <MudSelect T="string" @bind-Value="_newActivity.Steps[index].Device" Label="Device" Class="flex-grow-1 mr-2">
                            <MudSelectItem Value="@("Living Room TV")">Living Room TV</MudSelectItem>
                            <MudSelectItem Value="@("Sound Bar")">Sound Bar</MudSelectItem>
                            <MudSelectItem Value="@("Roku")">Roku</MudSelectItem>
                        </MudSelect>
                        <MudSelect T="string" @bind-Value="_newActivity.Steps[index].Command" Label="Command" Class="flex-grow-1 mr-2">
                            <MudSelectItem Value="@("Power On")">Power On</MudSelectItem>
                            <MudSelectItem Value="@("Power Off")">Power Off</MudSelectItem>
                            <MudSelectItem Value="@("Input HDMI1")">Input HDMI1</MudSelectItem>
                            <MudSelectItem Value="@("Input HDMI2")">Input HDMI2</MudSelectItem>
                            <MudSelectItem Value="@("Volume Up")">Volume Up</MudSelectItem>
                            <MudSelectItem Value="@("Volume Down")">Volume Down</MudSelectItem>
                        </MudSelect>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="@(() => RemoveStep(index))" />
                    </div>
                </MudCardContent>
            </MudCard>
        }
        
        <MudButton Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add" OnClick="AddStep" Class="mb-4">
            Add Step
        </MudButton>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(() => _showAddDialog = false)">Cancel</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@(async () => await CreateActivity())">Create Activity</MudButton>
    </DialogActions>
</MudDialog>

