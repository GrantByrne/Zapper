@page "/remote"
@using Zapper.Blazor.Components

<PageTitle>Remote Control - Zapper</PageTitle>

<div class="remote-page">
    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <MudAlert Severity="Severity.Error" Class="mb-4">@_errorMessage</MudAlert>
    }

    @if (_isLoading)
    {
        <div class="d-flex justify-center align-center" style="min-height: 200px;">
            <div class="text-center">
                <MudProgressCircular Size="Size.Large" Indeterminate="true" Class="mb-4" />
                <MudText>Loading devices...</MudText>
            </div>
        </div>
    }
    else if (!_devices.Any())
    {
        <MudPaper Class="pa-8 text-center">
            <MudIcon Icon="@Icons.Material.Filled.DevicesOther" Style="font-size: 3rem;" Class="mb-4 mud-text-secondary" />
            <MudText Typo="Typo.h5" Class="mb-2">No devices configured</MudText>
            <MudText Class="mb-4">Add devices first to use the remote control</MudText>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Href="/devices">
                Go to Devices
            </MudButton>
        </MudPaper>
    }
    else
    {
        <div class="device-selector">
            <MudSelect T="int?" Label="Choose Device" @bind-Value="_selectedDeviceId" Class="mb-4" FullWidth="true">
                @foreach (var device in _devices)
                {
                    <MudSelectItem Value="@device.Id">
                        <div class="device-option">
                            <MudText>@device.Name</MudText>
                            <MudText Typo="Typo.caption" Class="mud-text-secondary">@device.Type - @device.ConnectionType</MudText>
                        </div>
                    </MudSelectItem>
                }
            </MudSelect>
        </div>

        @if (GetSelectedDevice() != null)
        {
            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-4">
                <MudTabPanel Text="Remote" Icon="@Icons.Material.Filled.SettingsRemote">
                    <VirtualRemote Device="GetSelectedDevice()" 
                                 OnCommandSend="HandleCommandSend" 
                                 OnCustomCommandSend="HandleCustomCommandSend"
                                 OnNumberCommandSend="HandleNumberCommandSend"
                                 AdditionalCommands="_additionalCommands" />
                </MudTabPanel>
                
                @if (GetSelectedDevice()?.SupportsMouseInput == true)
                {
                    <MudTabPanel Text="Trackpad" Icon="@Icons.Material.Filled.TouchApp">
                        <Trackpad OnMouseMove="HandleMouseMove" 
                                OnMouseClick="HandleMouseClick"
                                OnMouseRightClick="HandleRightClick"
                                Sensitivity="1.5" />
                    </MudTabPanel>
                }
                
                @if (GetSelectedDevice()?.SupportsKeyboardInput == true)
                {
                    <MudTabPanel Text="Keyboard" Icon="@Icons.Material.Filled.Keyboard">
                        <div class="keyboard-section">
                            <MudTextField @bind-Value="_keyboardInput" 
                                        Label="Type text to send to device" 
                                        Variant="Variant.Outlined"
                                        FullWidth="true"
                                        Class="mb-4"
                                        OnKeyUp="HandleKeyboardInput" />
                            <MudButton Color="Color.Primary" 
                                     Variant="Variant.Filled" 
                                     FullWidth="true"
                                     OnClick="SendKeyboardText">
                                Send Text
                            </MudButton>
                        </div>
                    </MudTabPanel>
                }
                
                <MudTabPanel Text="All Commands" Icon="@Icons.Material.Filled.Apps">
                    <div class="all-commands-grid">
                        @foreach (var commandType in Enum.GetValues<Zapper.Core.Models.CommandType>())
                        {
                            @if (IsCommandAvailableForDevice(commandType))
                            {
                                <MudButton Color="Color.Default" 
                                         Variant="Variant.Outlined" 
                                         Size="Size.Small"
                                         OnClick="() => HandleCommandSend(commandType)">
                                    @GetCommandDisplayName(commandType)
                                </MudButton>
                            }
                        }
                    </div>
                </MudTabPanel>
            </MudTabs>
        }
    }
</div>

<style>
    .remote-page {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
    }

    .device-selector {
        margin-bottom: 20px;
    }

    .device-option {
        display: flex;
        flex-direction: column;
        gap: 2px;
    }

    .keyboard-section {
        max-width: 400px;
        margin: 0 auto;
        padding: 20px;
    }

    .all-commands-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
        gap: 10px;
        padding: 20px;
    }

    @@media (max-width: 600px) {
        .remote-page {
            padding: 10px;
        }

        .all-commands-grid {
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 8px;
            padding: 10px;
        }
    }
</style>

