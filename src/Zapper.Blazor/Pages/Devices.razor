@page "/devices"
@page "/"

<PageTitle>Zapper - Devices</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true" Class="mt-4">Devices</MudText>
<MudText Class="mb-4">Manage your connected devices</MudText>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <MudAlert Severity="Severity.Error" Class="mb-4">@_errorMessage</MudAlert>
}

<MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Label="Add Device" Class="mb-4" OnClick="@(() => _showAddDialog = true)" />

@if (_isLoading)
{
    <div class="d-flex justify-center align-center" style="min-height: 400px;">
        <div class="text-center">
            <MudProgressCircular Size="Size.Large" Indeterminate="true" Class="mb-4" />
            <MudText Typo="Typo.h6" Class="mb-2">Loading devices...</MudText>
            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                @if (_loadingStep == "initializing")
                {
                    <span>Initializing...</span>
                }
                else if (_loadingStep == "connecting")
                {
                    <span>Connecting to API...</span>
                }
                else if (_loadingStep == "fetching")
                {
                    <span>Fetching device data...</span>
                }
                else
                {
                    <span>Please wait...</span>
                }
            </MudText>
        </div>
    </div>
}
else
{
    <MudGrid>
        @foreach (var device in _devices)
        {
        <MudItem xs="12" sm="6" md="4">
            <MudCard>
                <MudCardContent>
                    <div class="d-flex align-center mb-2">
                        <MudIcon Icon="@GetDeviceIcon(device.Type)" Class="mr-2" />
                        <MudText Typo="Typo.h6">@device.Name</MudText>
                    </div>
                    <MudText Class="mb-1">Type: @device.Type</MudText>
                    <MudText Class="mb-1">Connection: @device.ConnectionType</MudText>
                    <MudChip T="string" Color="@(device.IsOnline ? Color.Success : Color.Error)" Size="Size.Small">
                        @(device.IsOnline ? "Online" : "Offline")
                    </MudChip>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Color="Color.Primary" Variant="Variant.Text" OnClick="@(() => TestDevice(device))">
                        Test
                    </MudButton>
                    <MudButton Color="Color.Secondary" Variant="Variant.Text" OnClick="@(() => EditDevice(device))">
                        Edit
                    </MudButton>
                    <MudButton Color="Color.Error" Variant="Variant.Text" OnClick="@(() => DeleteDevice(device))">
                        Delete
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        }
    </MudGrid>

    @if (!_devices.Any())
    {
        <MudPaper Class="pa-8 text-center">
            <MudIcon Icon="@Icons.Material.Filled.DevicesOther" Style="font-size: 3rem;" Class="mb-4 mud-text-secondary" />
            <MudText Typo="Typo.h5" Class="mb-2">No devices configured</MudText>
            <MudText Class="mb-4">Add your first device to get started</MudText>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" OnClick="@(() => _showAddDialog = true)">
                Add Device
            </MudButton>
        </MudPaper>
    }
}

<AddDeviceWizard @bind-IsVisible="_showAddDialog" OnDeviceAdded="AddDevice" />