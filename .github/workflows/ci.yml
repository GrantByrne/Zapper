name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'Zapper.Web'
  SOLUTION_PATH: 'src/zapper-next-gen.sln'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for some PR checks
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      
    - name: Generate Coverage Report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.3.11
      if: success()
      with:
        reports: '**/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
        verbosity: 'Info'
        
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: coverage-report
        path: coveragereport/
        
    - name: Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: success()
      with:
        filename: 'coveragereport/Cobertura.xml'
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    
    - name: Commit coverage badge to coverage-badge branch
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Create or checkout the coverage-badge branch
        git fetch origin coverage-badge:coverage-badge || true
        git checkout coverage-badge || git checkout -b coverage-badge
        
        # Copy the badge
        cp coveragereport/badge_linecoverage.svg badge_linecoverage.svg
        
        # Commit and push
        git add badge_linecoverage.svg
        git commit -m "Update coverage badge" || echo "No changes to commit"
        git push origin coverage-badge --force